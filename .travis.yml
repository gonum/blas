language: go

env:
  global:
  - secure: "gewG9b13l2/JJkag584f/e7vbH+CN5sE/v5IxJLI24vVBsta0L/rUiRN5e/NRXiyNDT4X2XV6R6BLED8VaUo3vDSWHBFtRAuwbMswxRcjDuIGph53zTNukhEwbFThEhZO5vO9T1tECXK1D8ktgQjmqwQ171InUy2loLFWloUTF4="  # at some point, when testing on osx
  matrix:
  #- BLAS_LIB=OpenBLAS
  #- BLAS_LIB=Accellerate
  # at some point, when the issue with drotgm is resolved
  #- BLAS_LIB=ATLAS


go:
 - release
 - tip
 - 1.3.3

before_install:
 - sudo apt-get update -qq
 - if ! go get code.google.com/p/go.tools/cmd/cover; then go get golang.org/x/tools/cmd/cover; fi
 - go get github.com/mattn/goveralls


install:
 - if [[ "$BLAS_LIB" == "ATLAS" ]]; then sudo apt-get install -qq libatlas-base-dev; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then sudo apt-get install -qq gfortran; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then pushd ~; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then sudo git clone --depth=1 git://github.com/xianyi/OpenBLAS; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then pushd OpenBLAS; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then sudo make FC=gfortran &> /dev/null; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then sudo make PREFIX=/usr install; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then popd; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then curl http://www.netlib.org/blas/blast-forum/cblas.tgz | tar -zx; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then pushd CBLAS; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then sudo mv Makefile.LINUX Makefile.in; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then sudo BLLIB=/usr/lib/libopenblas.a make alllib; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then sudo mv lib/cblas_LINUX.a /usr/lib/libcblas.a; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then popd; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then popd; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then export CGO_LDFLAGS="-L/usr/lib -lopenblas"; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then go get github.com/gonum/blas; fi # get rid of this when the fork is merged
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then pushd cgo; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then go install -v -x; fi
 - if [[ "$BLAS_LIB" == "OpenBLAS" ]]; then popd; fi

script:
 - go get -d -t -v ./...
 - go build -x -v ./...
 - go test -x -v ./...
 - diff <(gofmt -d .) <("")
 - if [[ $TRAVIS_SECURE_ENV_VARS = "true" ]]; then bash test-coverage.sh; fi

after_failure: failure

notifications:
  email:
    recipients:
      - jonathan.lawlor@gmail.com
    on_success: change
    on_failure: always
